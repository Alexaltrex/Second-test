{"version":3,"sources":["DAL/api.ts","store/app-reducer.ts","store/sidebar-reducer.ts","store/auth-reducer.ts","store/news-reducer.ts","store/store.ts","Components/Header/Header.tsx","CONST/const.js","Components/Header/HeaderContainer.tsx","Components/common/Preloader.tsx","Components/common/RowCustom.tsx","Components/Main/Profile/Profile.tsx","Components/Main/Profile/ProfileContainer.tsx","Components/common/RenderTextField.tsx","Components/common/RenderPasswordField.tsx","Components/Main/Login/Login.tsx","Components/Main/Login/LoginContainer.tsx","Components/Main/News/New/New.tsx","Components/Main/News/News.tsx","Components/Main/News/NewsContainer.tsx","Components/Main/About/About.tsx","Components/Main/Main.tsx","Components/Main/MainContainer.tsx","Components/Sidebar/SidebarItem/SidebarItem.tsx","Components/Sidebar/SidebarItem/SidebarItemContainer.tsx","Components/Sidebar/Sidebar.tsx","Components/Sidebar/SidebarContainer.tsx","App.tsx","index.js"],"names":["instance","axios","create","baseURL","newsAPI","get","response","data","authAPI","email","password","post","userId","initialState","open","isLoading","isLanError","appAC","type","appReducer","state","action","currentItem","sidebarAC","sidebarReducer","isAuth","loginStatus","errorText","userInfo","userInfoStatus","authAC","authReducer","news","newsAC","id","newsReducer","i","length","push","favorite","map","item","rootReducer","combineReducers","auth","sidebar","app","form","formReducer","store","createStore","applyMiddleware","thunkMiddleware","window","useStyles","makeStyles","theme","appBar","transition","transitions","easing","sharp","duration","leavingScreen","appBarShift","width","marginLeft","easeOut","enteringScreen","menuButton","marginRight","spacing","hide","display","title","flexGrow","Header","props","setOpen","logout","classes","AppBar","position","className","clsx","Toolbar","IconButton","color","aria-label","onClick","edge","Typography","variant","noWrap","Button","component","RouterLink","to","HeaderContainer","connect","circular","justifyContent","marginTop","Preloader","CircularProgress","size","row","paddingTop","paddingBottom","gridTemplateColumns","borderBottom","paddingLeft","backgroundColor","RowCustom","leftContent","rightContent","img","marginBottom","chip","link","textDecoration","Profile","getUserInfo","useEffect","languagesElements","languages","el","Chip","label","key","socialElements","social","sort","a","b","href","target","rel","src","process","alt","align","city","ProfileContainer","dispatch","status","root","iconLeft","left","top","transform","textField","RenderTextField","icon","input","placeholder","meta","touched","invalid","error","disabled","TextField","helperText","height","RenderPasswordField","useState","showPassword","setShowPassword","setPassword","FormControl","InputLabel","htmlFor","OutlinedInput","value","onChange","event","endAdornment","InputAdornment","onMouseDown","preventDefault","labelWidth","paper","flexDirection","alignItems","padding","borderRadius","button","empty","str","test","LoginReduxForm","reduxForm","validate","values","errors","handleSubmit","submitting","pristine","Paper","elevation","onSubmit","Field","name","Login","login","LoginContainer","reset","stopSubmit","_error","cardRoot","cardHeaderRoot","green","cardHeaderTitle","New","newItem","toggleFavorite","showFullText","setShowFullText","newsText","text","slice","Card","CardHeader","CardActionArea","console","log","CardContent","CardActions","disableSpacing","panel","margin","panelItem","panelItemTitle","News","getNews","setCurrentSidebarMenuItem","showOnlyFavorite","setShowOnlyFavorite","React","newsElements","Dialog","disableBackdropClick","disableEscapeKeyDown","maxWidth","aria-labelledby","DialogTitle","DialogContent","DialogActions","Badge","badgeContent","max","showZero","NewsContainer","ListItemCustom","ListItem","ListItemIcon","ListItemText","primary","About","ListItemElements","Link","List","drawerHeader","mixins","toolbar","content","contentShift","Main","path","MainContainer","SidebarItem","ownIndex","selected","SidebarItemContainer","drawer","flexShrink","drawerPaper","Sidebar","useTheme","Drawer","anchor","direction","Divider","SidebarContainer","createStyles","App","CssBaseline","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32bc5a5a.chunk.js","sourcesContent":["import axios from \"axios\";\r\nimport {NewsType, UserInfoType} from \"../Types/types\";\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://mysterious-reef-29460.herokuapp.com/api/v1/'\r\n});\r\n\r\nexport const newsAPI = {\r\n    async getNews() {\r\n        let response = await instance.get<NewsResponseType>('news')\r\n        return response.data;\r\n    }\r\n};\r\n\r\nexport const authAPI = {\r\n    async login(email: string, password: string) {\r\n        let response = await instance.post<LoginResponseType>('validate', {email, password});\r\n        return response.data;\r\n    },\r\n    async getUserInfo(userId: number) {\r\n        let response = await instance.get<UserInfoResponseType>(`user-info/${userId}`)\r\n        return response.data;\r\n    }\r\n};\r\n\r\nexport type NewsResponseType = {\r\n    status: string\r\n    data: Array<NewsType>\r\n}\r\n\r\nexport type LoginResponseType = {\r\n    status: 'ok'\r\n    data: { id: number }\r\n} | {\r\n    status: 'err'\r\n    message: 'wrong_email_or_password'\r\n}\r\n\r\ntype UserInfoResponseType = {\r\n    status: 'ok'\r\n    data: UserInfoType\r\n} | {\r\n    status: 'err'\r\n    message: \"user_not_found\"\r\n}","import {GetActionsType} from \"./store\";\r\n\r\n\r\nlet initialState = {\r\n    open: false,\r\n    isLoading: false,\r\n    isLanError: false\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\nexport type AppActionsType = GetActionsType<typeof appAC>\r\n\r\nconst appReducer = (state = initialState, action: AppActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'APP/SET_OPEN': {\r\n            return {...state, open: action.open}\r\n        }\r\n        case 'APP/TOGGLE_LOADING': {\r\n            return {...state, isLoading: action.isLoading}\r\n        }\r\n        case 'AUTH/SET_IS_LAN_ERROR': {\r\n            return {...state, isLanError: action.isLanError}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const appAC = {\r\n    setOpen: (open: boolean) => ({type: 'APP/SET_OPEN', open} as const),\r\n    toggleLoading: (isLoading: boolean) => ({type: 'APP/TOGGLE_LOADING', isLoading} as const),\r\n    setIsLanError: (isLanError: boolean) => ({type: 'AUTH/SET_IS_LAN_ERROR', isLanError} as const),\r\n};\r\n\r\nexport default appReducer;","import {GetActionsType} from \"./store\";\r\n\r\nlet initialState = {\r\n    currentItem: 0\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\nexport type SidebarActionsType = GetActionsType<typeof sidebarAC>\r\n\r\nconst sidebarReducer = (state = initialState, action: SidebarActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'SIDEBAR/SET_CURRENT_ITEM': {\r\n            return {...state, currentItem: action.currentItem}\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const sidebarAC = {\r\n    setCurrentSidebarMenuItem: (currentItem: number) => ({type: 'SIDEBAR/SET_CURRENT_ITEM', currentItem} as const)\r\n};\r\n\r\nexport default sidebarReducer;","import {authAPI} from \"../DAL/api\";\r\nimport {stopSubmit, reset} from \"redux-form\";\r\nimport {GetActionsType, StateType} from \"./store\";\r\nimport {appAC, AppActionsType} from \"./app-reducer\";\r\nimport {UserInfoType} from \"../Types/types\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {sidebarAC, SidebarActionsType} from \"./sidebar-reducer\";\r\n\r\nlet initialState = {\r\n    isAuth: false,\r\n    userId: null as null | number,\r\n    loginStatus: null as null | string, // статус ответа с сервера при логинизации\r\n    errorText: null as null | string, // выводимый в компонетне Login тект ошибки\r\n    userInfo: null as null | UserInfoType, // данные о пользователи\r\n    userInfoStatus: null as null | string, // статус запроса данных о пользователе\r\n\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype AuthActionsType = GetActionsType<typeof authAC>\r\ntype ThunkType = ThunkAction<Promise<void>, StateType, unknown, AuthActionsType | AppActionsType | SidebarActionsType>\r\n\r\nconst authReducer = (state = initialState, action: AuthActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'AUTH/SET_IS_AUTH': {\r\n            return {...state, isAuth: action.isAuth}\r\n        }\r\n        case 'AUTH/SET_USER_ID': {\r\n            return {...state, userId: action.userId}\r\n        }\r\n        case 'AUTH/LOGOUT': {\r\n            return {...state, isAuth: false, userId: null}\r\n        }\r\n        case 'AUTH/SET_LOGIN_STATUS': {\r\n            return {...state, loginStatus: action.loginStatus}\r\n        }\r\n        case 'AUTH/SET_ERROR_TEXT': {\r\n            switch (action.errorText) {\r\n                case \"wrong_email_or_password\": {\r\n                    return {...state, errorText: 'Имя пользователя или пароль введены не верно'}\r\n                }\r\n                default:\r\n                    return state;\r\n            }\r\n        }\r\n        case 'AUTH/SET_USER_INFO': {\r\n            return {...state, userInfo: action.userInfo}\r\n        }\r\n        case 'AUTH/SET_USER_INFO_STATUS': {\r\n            return {...state, userInfoStatus: action.userInfoStatus}\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\n//-------------------------- ACTIONS CREATORS --------------------------------------\r\nexport const authAC = {\r\n    setIsAuth: (isAuth: boolean) => ({type: 'AUTH/SET_IS_AUTH', isAuth} as const),\r\n    setUserId: (userId: number) => ({type: 'AUTH/SET_USER_ID', userId} as const),\r\n    logout: () => ({type: 'AUTH/LOGOUT'} as const),\r\n    setLoginStatus: (loginStatus: null | string) => ({\r\n        type: 'AUTH/SET_LOGIN_STATUS',\r\n        loginStatus: loginStatus\r\n    } as const),\r\n    setErrorText: (errorText: string) => ({type: 'AUTH/SET_ERROR_TEXT', errorText} as const),\r\n    setUserInfo: (userInfo: UserInfoType) => ({type: 'AUTH/SET_USER_INFO', userInfo} as const),\r\n    setUserInfoStatus: (userInfoStatus: null | string) => ({\r\n        type: 'AUTH/SET_USER_INFO_STATUS',\r\n        userInfoStatus\r\n    } as const),\r\n};\r\n\r\n//------------------------------ THUNKS ---------------------------------------------\r\nexport const login = (email: string, password: string):ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(appAC.toggleLoading(true));\r\n        let data = await authAPI.login(email, password);\r\n        dispatch(appAC.toggleLoading(false));\r\n        dispatch(appAC.setIsLanError(false));\r\n        dispatch(authAC.setLoginStatus(data.status));\r\n        if (data.status === 'ok') {\r\n            dispatch(authAC.setIsAuth(true));\r\n            dispatch(authAC.setUserId(data.data.id));\r\n            dispatch(sidebarAC.setCurrentSidebarMenuItem(2));\r\n        } else if (data.status === 'err') {\r\n            //dispatch(setErrorText(data.message));\r\n            dispatch(reset('login'));\r\n            dispatch(stopSubmit('login', {_error: 'Имя пользователя или пароль введены не верно'}));\r\n        }\r\n    } catch (e) {\r\n        dispatch(appAC.setIsLanError(true));\r\n        dispatch(appAC.toggleLoading(false));\r\n    }\r\n};\r\n\r\nexport const getUserInfo = (userId: number): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(appAC.toggleLoading(true));\r\n        dispatch(appAC.setIsLanError(false));\r\n        let data = await authAPI.getUserInfo(userId);\r\n        dispatch(appAC.toggleLoading(false));\r\n        if (data.status === 'ok') {\r\n            dispatch(authAC.setUserInfo(data.data));\r\n            dispatch(authAC.setUserInfoStatus('ok'));\r\n            dispatch(appAC.toggleLoading(false));\r\n        } else {\r\n            dispatch(authAC.setUserInfoStatus('err'));\r\n            dispatch(appAC.toggleLoading(false));\r\n        }\r\n    } catch (e) {\r\n        dispatch(appAC.setIsLanError(true));\r\n        dispatch(appAC.toggleLoading(false));\r\n    }\r\n}\r\n\r\nexport default authReducer;\r\n","import {newsAPI} from \"../DAL/api\";\r\nimport {GetActionsType, StateType} from \"./store\";\r\nimport {appAC, AppActionsType} from \"./app-reducer\";\r\nimport {ThunkAction} from \"redux-thunk\";\r\nimport {NewsType} from \"../Types/types\";\r\n\r\nlet initialState = {\r\n     news: [] as Array<NewsType & {favorite: boolean}>\r\n};\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype NewsActionsType = GetActionsType<typeof newsAC>\r\ntype ThunkType = ThunkAction<Promise<void>, StateType, unknown, NewsActionsType | AppActionsType>\r\n\r\nconst newsReducer = (state = initialState, action: NewsActionsType): InitialStateType => {\r\n    switch (action.type) {\r\n        case 'NEWS/SET_NEWS': {\r\n            let news = [];\r\n            for (let i=0; i < action.news.length; i++){\r\n                news.push({...action.news[i], favorite: false})\r\n            }\r\n            return {...state, news: news}\r\n        }\r\n        case 'NEWS/TOGGLE_FAVORITE': {\r\n            //const newItem = {...state.news[action.id], favorite: !state.news[action.id].favorite};\r\n            return {...state, news: state.news.map(item => {\r\n                if (item.id === action.id) {\r\n                    return {...item, favorite: !item.favorite}\r\n                } else {\r\n                    return item\r\n                }\r\n\r\n            })}\r\n        }\r\n            default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const newsAC = {\r\n    setNews: (news: Array<NewsType>) => ({type: 'NEWS/SET_NEWS', news} as const),\r\n    toggleFavorite: (id: number) => ({type: 'NEWS/TOGGLE_FAVORITE', id} as const)\r\n};\r\n\r\nexport const getNews = (): ThunkType => async (dispatch) => {\r\n    try {\r\n        dispatch(appAC.toggleLoading(true));\r\n        let data = await newsAPI.getNews();\r\n        if (data.status === 'ok') {\r\n            dispatch(newsAC.setNews(data.data));\r\n        } \r\n    } catch (e) {\r\n        dispatch(appAC.setIsLanError(true));\r\n    } finally {\r\n        dispatch(appAC.toggleLoading(false));\r\n    }\r\n    \r\n};\r\n\r\nexport default newsReducer;","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport authReducer from \"./auth-reducer\";\r\nimport newsReducer from \"./news-reducer\";\r\nimport { reducer as formReducer } from 'redux-form';\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet rootReducer = combineReducers({\r\n    auth: authReducer,\r\n    news: newsReducer,\r\n    sidebar: sidebarReducer,\r\n    app: appReducer,\r\n    form: formReducer\r\n});\r\n\r\nexport type StateType = ReturnType<typeof rootReducer>\r\ntype PropertiesType<T> = T extends {[key: string]: infer U} ? U : never;\r\nexport type GetActionsType<T extends { [key: string]: (...args: any[]) => any }> = ReturnType<PropertiesType<T>>;\r\n\r\nlet store = createStore(rootReducer, applyMiddleware(thunkMiddleware));\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles, Theme} from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport {drawerWidth} from \"../../CONST/const\";\r\nimport {HeaderPropsType} from './HeaderContainer';\r\nimport {Button} from \"@material-ui/core\";\r\nimport {Link as RouterLink} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\nconst Header: React.FC<HeaderPropsType> = (props) => {\r\n    const {open, setOpen, isAuth, logout} = props;\r\n    const classes = useStyles();\r\n\r\n    const onClick = () => {\r\n        if (isAuth) {\r\n            logout();\r\n        }\r\n    };\r\n\r\n    const handleDrawerOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    return (\r\n        <AppBar\r\n            position=\"fixed\"\r\n            className={clsx(classes.appBar, {\r\n                [classes.appBarShift]: open,\r\n            })}\r\n        >\r\n            <Toolbar>\r\n                <IconButton\r\n                    color=\"inherit\"\r\n                    aria-label=\"open drawer\"\r\n                    onClick={handleDrawerOpen}\r\n                    edge=\"start\"\r\n                    className={clsx(classes.menuButton, open && classes.hide)}\r\n                >\r\n                    <MenuIcon/>\r\n                </IconButton>\r\n                <Typography variant=\"h6\" noWrap className={classes.title}>\r\n                    React is awesome\r\n                </Typography>\r\n                <Button color=\"inherit\" component={RouterLink} to='/login' onClick={onClick}>\r\n                    {(!isAuth) ? 'Войти' : 'Выйти'}\r\n                </Button>\r\n            </Toolbar>\r\n        </AppBar>\r\n    )\r\n};\r\n\r\nexport default Header;\r\n","export const drawerWidth = 240;","import {connect} from \"react-redux\";\r\nimport Header from \"./Header\";\r\nimport {appAC} from \"../../store/app-reducer\";\r\nimport {authAC} from \"../../store/auth-reducer\";\r\nimport {StateType} from \"../../store/store\";\r\n\r\nconst mapStateToProps = (state: StateType): MapStatePropsType  => ({\r\n    isAuth: state.auth.isAuth,\r\n    open: state.app.open\r\n});\r\n\r\nconst setOpen = appAC.setOpen;\r\nconst logout = authAC.logout;\r\n\r\nconst HeaderContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, StateType>\r\n(mapStateToProps, {logout, setOpen})(Header);\r\n\r\nexport default HeaderContainer;\r\n\r\n//------------------------------------------------------------------------\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    open: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n    logout: () => void\r\n    setOpen: (open: boolean) => void\r\n}\r\n\r\nexport type HeaderPropsType = MapStatePropsType & MapDispatchPropsType\r\n\r\n\r\n","import {CircularProgress} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    circular: {\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        marginTop: 20\r\n    }\r\n});\r\n\r\nconst Preloader: React.FC = () => {\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.circular}>\r\n            <CircularProgress size={100} color={'secondary'}/>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default Preloader\r\n\r\n","import * as React from \"react\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/core/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    row: {\r\n        display: 'grid',\r\n        paddingTop: 3,\r\n        paddingBottom: 3,\r\n        gridTemplateColumns: '1fr 1fr',\r\n        borderBottom: '1px #ccc solid',\r\n        paddingLeft: 10,\r\n        '&:nth-of-type(odd)': {\r\n            backgroundColor: '#ccc',\r\n        },\r\n    },\r\n\r\n});\r\n\r\nconst RowCustom: React.FC<RowCustomPropsTypes> = (props) => {\r\n    const classes = useStyles()\r\n    const {leftContent, rightContent} = props\r\n    return (\r\n        <div className={classes.row}>\r\n            <Typography variant='subtitle1'>{leftContent}</Typography>\r\n            <Typography variant='h6' color='primary'>{rightContent}</Typography>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RowCustom;\r\n\r\ntype RowCustomPropsTypes = {\r\n    leftContent: string\r\n    rightContent: string | React.ReactNode | React.ReactElement\r\n}","import React, {useEffect} from 'react';\r\nimport Preloader from \"../../common/Preloader\";\r\nimport {ProfilePropsType} from \"./ProfileContainer\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport RowCustom from \"../../common/RowCustom\";\r\nimport Chip from \"@material-ui/core/Chip\";\r\n\r\nconst useStyles = makeStyles({\r\n    img: {\r\n        width: 30,\r\n        display: 'inline-block'\r\n    },\r\n    title: {\r\n        marginBottom: 20\r\n    },\r\n    chip: {\r\n        marginRight: 5\r\n    },\r\n    link: {\r\n        textDecoration: 'none',\r\n        marginRight: 5\r\n    }\r\n\r\n});\r\n\r\nconst Profile: React.FC<ProfilePropsType> = (props) => {\r\n    const classes = useStyles();\r\n    const {userId, getUserInfo, isLoading, userInfo, userInfoStatus} = props;\r\n\r\n    useEffect(() => {\r\n        if (userId) {\r\n            getUserInfo(userId);\r\n        }\r\n    }, [userId, getUserInfo]);\r\n\r\n    if (isLoading) {\r\n        return <Preloader/>\r\n    }\r\n\r\n    const languagesElements = userInfo\r\n        ? userInfo.languages.map((el, i) => <Chip label={el}\r\n                                                  color={'primary'}\r\n                                                  key={i}\r\n                                                  className={classes.chip}/>)\r\n        : null\r\n\r\n    const socialElements = userInfo\r\n        ? userInfo.social\r\n            .sort((a, b) => {\r\n                if (a.label === 'web') {\r\n                    return -1;\r\n                }\r\n                if (b.label === 'web') {\r\n                    return 1;\r\n                }\r\n                return 0;\r\n            })\r\n            .map((el, i) => <a key={i}\r\n                               href={el.link}\r\n                               target=\"_blank\"\r\n                               rel=\"noopener noreferrer\"\r\n                               className={classes.link}>\r\n                <img src={`${process.env.PUBLIC_URL}/${el.label}.png`}\r\n                     className={classes.img}\r\n                     alt=\"\"/>\r\n            </a>)\r\n        : null\r\n\r\n\r\n    return (\r\n        <>\r\n            <Typography\r\n                className={classes.title}\r\n                align='center'\r\n                color='primary'\r\n                variant='h4'\r\n            >\r\n                Профиль\r\n            </Typography>\r\n\r\n            {userInfo && userInfoStatus === 'ok' && <div>\r\n                <div>\r\n                    <RowCustom leftContent='Город:' rightContent={userInfo.city}/>\r\n                    <RowCustom leftContent='Знание языков:'\r\n                               rightContent={languagesElements}\r\n                    />\r\n                    <RowCustom leftContent='Социальные сети:'\r\n                               rightContent={socialElements}\r\n                    />\r\n                </div>\r\n            </div>}\r\n            {userInfoStatus === 'err' && <div>Пользователь не найден</div>}\r\n        </>\r\n    )\r\n};\r\n\r\nexport default Profile;","import {getUserInfo} from \"../../../store/auth-reducer\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {StateType} from \"../../../store/store\";\r\nimport {UserInfoType} from \"../../../Types/types\";\r\n\r\nconst mapStateToProps = (state: StateType): MapStatePropsType => ({\r\n    userInfo: state.auth.userInfo,\r\n    userId: state.auth.userId,\r\n    userInfoStatus: state.auth.userInfoStatus,\r\n    isLoading: state.app.isLoading\r\n});\r\n\r\nconst ProfileContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, StateType>\r\n(mapStateToProps, {getUserInfo})(Profile);\r\n\r\nexport default ProfileContainer;\r\n\r\n//-------------------------------TYPES----------------------------------------------------------\r\ntype MapStatePropsType = {\r\n    userInfo: UserInfoType | null\r\n    userId: null | number\r\n    userInfoStatus: null | string\r\n    isLoading: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    getUserInfo: (userId: number) => void\r\n}\r\nexport type ProfilePropsType = MapStatePropsType & MapDispatchPropsType;","import {TextField} from \"@material-ui/core\";\r\nimport React from \"react\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative'\r\n    },\r\n    iconLeft: {\r\n        position: 'absolute',\r\n        left: -5,\r\n        top: '50%',\r\n        transform: 'translate(-100%, -70%)'\r\n    },\r\n    textField: {\r\n        width: 300,\r\n        marginBottom: 20\r\n    }\r\n});\r\n\r\ntype PropsType = {\r\n    icon: React.ReactElement\r\n    label: string\r\n    input: any\r\n    placeholder: string\r\n    meta: {\r\n        touched: boolean\r\n        invalid: boolean\r\n        error: string\r\n    }\r\n    disabled: boolean\r\n}\r\n\r\nconst RenderTextField: React.FC<PropsType> = (props) => {\r\n    const {icon, label, input, placeholder, meta: {touched, invalid, error}, disabled} = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <div className={classes.iconLeft}>\r\n                {icon}\r\n            </div>\r\n\r\n            <TextField\r\n                className={classes.textField}\r\n                disabled={disabled}\r\n                variant=\"outlined\"\r\n                label={label}\r\n                placeholder={placeholder}\r\n                error={touched && invalid}\r\n                helperText={touched && error}\r\n                {...input}\r\n\r\n            />\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RenderTextField;","import React, {ChangeEvent, useState} from \"react\";\r\nimport FormControl from \"@material-ui/core/FormControl\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport InputLabel from \"@material-ui/core/InputLabel\";\r\nimport InputAdornment from \"@material-ui/core/InputAdornment\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Visibility from '@material-ui/icons/Visibility';\r\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\r\nimport OutlinedInput from \"@material-ui/core/OutlinedInput\";\r\nimport LockIcon from '@material-ui/icons/Lock';\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        position: 'relative'\r\n    },\r\n    iconLeft: {\r\n        position: 'absolute',\r\n        left: -5,\r\n        top: '50%',\r\n        transform: 'translate(-100%, -50%)'\r\n    },\r\n    textField: {\r\n        width: 300\r\n    },\r\n    error: {\r\n        paddingLeft: 14,\r\n        paddingTop: 2\r\n    },\r\n    input: {\r\n        height: 56\r\n    }\r\n});\r\n\r\ntype PropsType = {\r\n    label: string\r\n    input: any\r\n    placeholder: string\r\n    meta: {\r\n        touched: boolean\r\n        invalid: boolean\r\n        error: string\r\n    }\r\n    disabled: boolean\r\n}\r\n\r\nconst RenderPasswordField: React.FC<PropsType> = (props) => {\r\n    const {label, input, placeholder, meta, disabled} = props;\r\n    const [showPassword, setShowPassword] = useState(false)\r\n    const [password, setPassword] = useState('')\r\n    const classes = useStyles();\r\n    const handleChange = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setPassword(event.target.value);\r\n    };\r\n    const handleClickShowPassword = () => {\r\n        setShowPassword(!showPassword);\r\n    };\r\n    const handleMouseDownPassword = (event: React.MouseEvent) => {\r\n        event.preventDefault();\r\n    };\r\n\r\n    return (\r\n        <div className={classes.root}>\r\n            <LockIcon className={classes.iconLeft}/>\r\n\r\n            <FormControl className={classes.textField}\r\n                         variant=\"outlined\">\r\n\r\n                <InputLabel htmlFor=\"outlined-adornment-password\">{label}</InputLabel>\r\n\r\n                <OutlinedInput\r\n                    className={classes.input}\r\n                    disabled={disabled}\r\n                    id=\"outlined-adornment-password\"\r\n                    placeholder={placeholder}\r\n                    type={showPassword ? 'text' : 'password'}\r\n                    value={password}\r\n                    error={meta.touched && meta.invalid}\r\n                    onChange={handleChange}\r\n                    {...input}\r\n\r\n                    endAdornment={\r\n                        <InputAdornment position=\"end\">\r\n                            <IconButton\r\n                                aria-label=\"toggle password visibility\"\r\n                                onClick={handleClickShowPassword}\r\n                                onMouseDown={handleMouseDownPassword}\r\n                                edge=\"end\"\r\n                            >\r\n                                {showPassword ? <Visibility/> : <VisibilityOff/>}\r\n                            </IconButton>\r\n                        </InputAdornment>\r\n                    }\r\n                    labelWidth={130}\r\n                />\r\n\r\n                {meta.touched && meta.invalid && <Typography color='error' variant='caption' className={classes.error}>\r\n                    {meta.error}\r\n                </Typography>}\r\n\r\n\r\n            </FormControl>\r\n        </div>\r\n    )\r\n};\r\n\r\nexport default RenderPasswordField;","import React from 'react';\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport {Button, Paper} from \"@material-ui/core\";\r\nimport {LoginPropsType} from \"./LoginContainer\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport MailOutlineIcon from '@material-ui/icons/MailOutline';\r\nimport Preloader from \"../../common/Preloader\";\r\nimport RenderTextField from \"../../common/RenderTextField\";\r\nimport RenderPasswordField from \"../../common/RenderPasswordField\";\r\n\r\nconst useStyles = makeStyles({\r\n    root: {\r\n        display: 'flex',\r\n        justifyContent: 'center'\r\n    },\r\n    paper: {\r\n        width: 400,\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n        padding: 10,\r\n        paddingBottom: 20,\r\n        borderRadius: 15\r\n    },\r\n    error: {\r\n        width: 300,\r\n        marginBottom: 10,\r\n    },\r\n    textField: {\r\n        marginBottom: 20,\r\n        width: 300\r\n\r\n    },\r\n    button: {\r\n        marginBottom: 10,\r\n        width: 300,\r\n    },\r\n    title: {\r\n        marginBottom: 20\r\n    }\r\n});\r\n\r\n//-------------------------------FORM-----------------------------------------------------\r\nconst LoginForm: React.FC<InjectedFormProps<LoginFormValuesType, OwnPropsType> & OwnPropsType> = (props) => {\r\n    const {handleSubmit, submitting, pristine, error, isLoading} = props;\r\n    const classes = useStyles();\r\n    return (\r\n        <div className={classes.root}>\r\n            <Paper elevation={6} className={classes.paper}>\r\n                <form onSubmit={handleSubmit}>\r\n                    <Typography\r\n                        className={classes.title}\r\n                        align='center'\r\n                        color='primary'\r\n                        variant='h4'\r\n                    >\r\n                        Войти в профиль\r\n                    </Typography>\r\n\r\n                    <div>\r\n                        <Field\r\n                            className={classes.textField}\r\n                            disabled={isLoading}\r\n                            name='email'\r\n                            component={RenderTextField}\r\n                            placeholder='Введите свой email'\r\n                            label='Электронная почта (max@test.com)'\r\n                            icon={<MailOutlineIcon/>}\r\n                        />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <Field\r\n                            name='password'\r\n                            disabled={isLoading}\r\n                            className={classes.textField}\r\n                            component={RenderPasswordField}\r\n                            placeholder='Введите свой пароль'\r\n                            label='Пароль (12345)'\r\n                        />\r\n                    </div>\r\n\r\n                    {error && !pristine &&\r\n                    <Typography color='error' variant='h6'>\r\n                        {error}\r\n                    </Typography>}\r\n\r\n\r\n                    <Typography color='error' variant='subtitle1' className={classes.error}>\r\n                        {error}\r\n                    </Typography>\r\n\r\n\r\n                    <div>\r\n                        <Button type=\"submit\"\r\n                                color=\"primary\"\r\n                                variant=\"contained\"\r\n                                className={classes.button}\r\n                                disabled={submitting || pristine || isLoading}>\r\n                            Войти\r\n                        </Button>\r\n                    </div>\r\n\r\n                </form>\r\n            </Paper>\r\n\r\n        </div>\r\n    )\r\n};\r\n\r\n//----------------------------VALIDATE------------------------------------\r\nexport const empty: EmptyType = (str) => /^\\s+$/.test(str);\r\nconst validate: LoginValidateType = (values) => {\r\n    let errors = {} as LoginErrorsType;\r\n    if (empty(values.email)) {\r\n        errors.email = 'email field is empty'\r\n    }\r\n    if (!values.email) {\r\n        errors.email = 'field is required'\r\n    }\r\n    if (empty(values.password)) {\r\n        errors.password = 'password field is empty'\r\n    }\r\n    if (!values.password) {\r\n        errors.password = 'field is required'\r\n    }\r\n    return errors;\r\n};\r\n\r\n//----------------------------REDUX-FORM------------------------------------------------\r\nconst LoginReduxForm = reduxForm<LoginFormValuesType, OwnPropsType>({\r\n    form: 'login',\r\n    validate\r\n})(LoginForm);\r\n\r\n//-----------------------------COMPONENT-------------------------------------------------------\r\nconst Login: React.FC<LoginPropsType> = (props) => {\r\n    const {login, isLoading} = props;\r\n    let onSubmit = (values: LoginFormValuesType) => {\r\n        login(values.email, values.password);\r\n    }\r\n    return (\r\n        <>\r\n            <LoginReduxForm onSubmit={onSubmit} isLoading={isLoading}/>\r\n            {isLoading && <Preloader/>}\r\n        </>\r\n        )\r\n\r\n};\r\n\r\nexport default Login;\r\n\r\n//--------------------------TYPES------------------------------------------\r\ntype EmptyType = (str: string) => boolean\r\ntype LoginErrorsType = {\r\n    email: string | undefined\r\n    password: string | undefined\r\n}\r\ntype LoginFormValuesType = {\r\n    email: string\r\n    password: string\r\n}\r\ntype OwnPropsType = {\r\n    isLoading: boolean\r\n}\r\nexport type LoginValidateType = (values: LoginFormValuesType) => LoginErrorsType;","import {connect} from \"react-redux\";\r\nimport Login from \"./Login\";\r\nimport {login} from \"../../../store/auth-reducer\";\r\nimport {StateType} from \"../../../store/store\";\r\n\r\nconst mapStateToProps = (state: StateType) => ({\r\n    loginStatus: state.auth.loginStatus,\r\n    errorText: state.auth.errorText,\r\n    //isLanError: state.app.isLanError,\r\n    isLoading: state.app.isLoading\r\n});\r\n\r\nconst LoginContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, StateType>\r\n(mapStateToProps, {login})(Login);\r\n\r\nexport default LoginContainer;\r\n\r\n//--------------------------------------------------------\r\ntype MapStatePropsType = {\r\n    loginStatus: null | string\r\n    errorText: null | string\r\n    //isLanError: boolean\r\n    isLoading: boolean\r\n\r\n}\r\ntype MapDispatchPropsType = {\r\n    login: (email: string, password: string) => void\r\n}\r\nexport type LoginPropsType = MapStatePropsType & MapDispatchPropsType;\r\n\r\n","import React, {useState} from 'react';\r\nimport {NewsType} from \"../../../../Types/types\";\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport {CardContent} from \"@material-ui/core\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport CardActions from \"@material-ui/core/CardActions\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport clsx from 'clsx';\r\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\r\nimport green from \"@material-ui/core/colors/green\";\r\n\r\nconst useStyles = makeStyles({\r\n    cardRoot: {\r\n        marginBottom: 10\r\n    },\r\n    cardHeaderRoot: {\r\n        backgroundColor: green[900]\r\n    },\r\n    cardHeaderTitle: {\r\n        color: 'white'\r\n    },\r\n    favorite: {\r\n        color: 'red'\r\n    }\r\n})\r\n\r\n\r\nconst New: React.FC<PropsType> = (props) => {\r\n    const {newItem, toggleFavorite} = props;\r\n    const classes = useStyles();\r\n    const [showFullText, setShowFullText] = useState(false)\r\n\r\n    const onFavoriteClick = () => {\r\n        toggleFavorite(newItem.id);\r\n    };\r\n\r\n    const onClick = () => {\r\n        setShowFullText(true)\r\n        console.log('test')\r\n    };\r\n\r\n    let newsText = (newItem.text.length > 60)\r\n        ? `${newItem.text.slice(0, 60)}...`\r\n        : newItem.text;\r\n\r\n    return (\r\n        <Card classes={{\r\n            root: classes.cardRoot\r\n        }}>\r\n            <CardHeader title={newItem.title}\r\n                        classes={{\r\n                            root: classes.cardHeaderRoot,\r\n                            title: classes.cardHeaderTitle\r\n                        }}\r\n            />\r\n\r\n            {!showFullText && <CardActionArea onClick={onClick}>\r\n                <CardContent>\r\n                    <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n                        {newsText}\r\n                    </Typography>\r\n                </CardContent>\r\n            </CardActionArea>}\r\n\r\n            {showFullText && <CardContent>\r\n                    <Typography variant=\"body1\" color=\"textSecondary\" component=\"p\">\r\n                        {newItem.text}\r\n                    </Typography>\r\n                </CardContent>}\r\n\r\n            <CardActions disableSpacing>\r\n                <IconButton aria-label=\"add to favorites\" onClick={onFavoriteClick}>\r\n                    <FavoriteIcon className={clsx(newItem.favorite && classes.favorite)}/>\r\n                </IconButton>\r\n            </CardActions>\r\n\r\n        </Card>\r\n    )\r\n};\r\n\r\nexport default New;\r\n\r\n//-------------------------------------------\r\ntype PropsType = {\r\n    newItem: NewsType & { favorite: boolean }\r\n    toggleFavorite: (id: number) => void\r\n}","import React, {useEffect, useState} from 'react';\r\nimport New from \"./New/New\";\r\nimport Preloader from \"../../common/Preloader\";\r\nimport {NewsPropsType} from \"./NewsContainer\";\r\nimport {Typography} from \"@material-ui/core\";\r\nimport Badge from \"@material-ui/core/Badge\";\r\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\r\nimport {makeStyles} from \"@material-ui/styles\";\r\nimport FavoriteIcon from '@material-ui/icons/Favorite';\r\nimport clsx from \"clsx\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport Dialog from \"@material-ui/core/Dialog\";\r\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\r\nimport DialogContent from \"@material-ui/core/DialogContent\";\r\nimport DialogActions from \"@material-ui/core/DialogActions\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport { Link as RouterLink} from 'react-router-dom';\r\n\r\nconst useStyles = makeStyles({\r\n    panel: {\r\n        display: 'flex',\r\n        margin: 10,\r\n        marginBottom: 20\r\n    },\r\n    panelItem: {\r\n        marginRight: 60,\r\n        display: 'flex',\r\n        alignItems: 'center'\r\n    },\r\n    panelItemTitle: {\r\n        marginRight: 10\r\n    },\r\n    favorite: {\r\n        color: 'red'\r\n    },\r\n    title: {\r\n        marginBottom: 20\r\n    },\r\n});\r\n\r\nconst News: React.FC<NewsPropsType> = (props) => {\r\n    const {news, isLoading, getNews, toggleFavorite, isLanError, setCurrentSidebarMenuItem} = props;\r\n    const classes = useStyles();\r\n\r\n    const [showOnlyFavorite, setShowOnlyFavorite] = useState(false);\r\n\r\n    const [open, setOpen] = React.useState(false);\r\n    useEffect(() => {\r\n        if (isLanError) {\r\n            setOpen(true)\r\n        }\r\n    }, [isLanError]);\r\n\r\n    const handleOk = () => {\r\n        //setOpen(false);\r\n        setCurrentSidebarMenuItem(1)\r\n    };\r\n\r\n    let newsElements = news\r\n        ? news.map(newItem => {\r\n            if (showOnlyFavorite) {\r\n                if (newItem.favorite) {\r\n                    return <New key={newItem.id}\r\n                                newItem={newItem}\r\n                                toggleFavorite={toggleFavorite}\r\n                    />\r\n                } else {\r\n                    return null\r\n                }\r\n            } else {\r\n                return <New key={newItem.id}\r\n                            newItem={newItem}\r\n                            toggleFavorite={toggleFavorite}\r\n                />\r\n            }\r\n        })\r\n        : null;\r\n\r\n    useEffect(() => {\r\n        getNews();\r\n    }, [getNews]);\r\n\r\n    const onClick = () => {\r\n        setShowOnlyFavorite(!showOnlyFavorite);\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <Dialog\r\n                disableBackdropClick\r\n                disableEscapeKeyDown\r\n                maxWidth=\"xs\"\r\n                aria-labelledby=\"confirmation-dialog-title\"\r\n                open={open}\r\n            >\r\n                <DialogTitle id=\"confirmation-dialog-title\">Error</DialogTitle>\r\n                <DialogContent>\r\n                    Сервер недоступен\r\n                </DialogContent>\r\n                <DialogActions>\r\n                    {/*<Button autoFocus onClick={handleOk} color=\"primary\">*/}\r\n                    {/*    Ok*/}\r\n                    {/*</Button>*/}\r\n                    <Button color=\"primary\" component={RouterLink} to=\"/about\" onClick={handleOk}>\r\n                        Ok\r\n                    </Button>\r\n                </DialogActions>\r\n            </Dialog>\r\n\r\n            <Typography\r\n                className={classes.title}\r\n                align='center'\r\n                color='primary'\r\n                variant='h4'\r\n            >\r\n                Новости\r\n            </Typography>\r\n\r\n            {\r\n                isLoading || !news\r\n                    ? <Preloader/>\r\n                    : <>\r\n                        <div className={classes.panel}>\r\n\r\n                            <div className={classes.panelItem}>\r\n                                <Typography variant='subtitle1' color='primary' component='span'\r\n                                            className={classes.panelItemTitle}>\r\n                                    {'Количество новостей:'}\r\n                                </Typography>\r\n                                <Badge badgeContent={news.length}\r\n                                       color=\"primary\"\r\n                                       max={99999}\r\n                                       showZero>\r\n                                    <ImportContactsIcon/>\r\n                                </Badge>\r\n                            </div>\r\n\r\n                            <div className={classes.panelItem}>\r\n                                <Typography variant='subtitle1' color='primary' component='span'\r\n                                            className={classes.panelItemTitle}>\r\n                                    {'Показывать только отмеченные'}\r\n                                </Typography>\r\n                                <IconButton aria-label=\"add to favorites\" onClick={onClick}>\r\n                                    <FavoriteIcon className={clsx(showOnlyFavorite && classes.favorite)}/>\r\n                                </IconButton>\r\n                            </div>\r\n\r\n                        </div>\r\n\r\n                        <div>{newsElements}</div>\r\n\r\n                    </>\r\n            }\r\n        </>\r\n    )\r\n};\r\n\r\nexport default News;","import {connect} from \"react-redux\";\r\nimport News from \"./News\";\r\nimport {getNews, newsAC} from \"../../../store/news-reducer\";\r\nimport {StateType} from \"../../../store/store\";\r\nimport {NewsType} from \"../../../Types/types\";\r\nimport {sidebarAC} from \"../../../store/sidebar-reducer\";\r\n\r\nconst mapStateToProps = (state: StateType): MapStatePropsType => ({\r\n    news: state.news.news,\r\n    isLoading: state.app.isLoading,\r\n    isLanError: state.app.isLanError\r\n});\r\n\r\nconst toggleFavorite = newsAC.toggleFavorite;\r\nconst setCurrentSidebarMenuItem = sidebarAC.setCurrentSidebarMenuItem;\r\n\r\nconst NewsContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, StateType>\r\n(mapStateToProps, {getNews, toggleFavorite, setCurrentSidebarMenuItem})(News);\r\n\r\nexport default NewsContainer;\r\n\r\n//------------------------------TYPES----------------------------------------------------\r\ntype MapStatePropsType = {\r\n    news: Array<NewsType  & {favorite: boolean}>\r\n    isLoading: boolean\r\n    isLanError: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    getNews: () => void\r\n    toggleFavorite: (id: number) => void\r\n    setCurrentSidebarMenuItem: (currentItem: number) => void\r\n}\r\nexport type NewsPropsType = MapStatePropsType & MapDispatchPropsType;\r\n","import React from 'react';\r\nimport ExtensionIcon from '@material-ui/icons/Extension';\r\nimport {List} from \"@material-ui/core\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\ntype PropsType = {\r\n    text: string\r\n    color: 'primary' | 'secondary'\r\n};\r\n\r\nconst ListItemCustom: React.FC<PropsType> = (props) => {\r\n    const {text, color} = props;\r\n\r\n    return (\r\n        <ListItem>\r\n            <ListItemIcon>\r\n                <ExtensionIcon color={color}/>\r\n            </ListItemIcon>\r\n            <ListItemText primary={text}/>\r\n        </ListItem>\r\n    )\r\n}\r\n\r\nconst About: React.FC = () => {\r\n    const description = [\r\n        'Интерфейс создан на базе React',\r\n        'Управление state - глобальным: redux, react-redux, локальным: react hook useState',\r\n        'Побочные эффекты - react hook useEffect, redux-thunk',\r\n        'Роутинг - react-router-dom',\r\n        'Сетевые запросы: axios',\r\n        'Работа с формами - redux-form',\r\n        'Дизайн - Material-UI',\r\n        'Типизация - typescript'\r\n    ];\r\n\r\n\r\n    const ListItemElements = description.map((item, i) => <ListItemCustom key={i} text={item} color={(i % 2 === 0) ? 'primary' : 'secondary'}/>);\r\n    const preventDefault = (event: React.SyntheticEvent) => event.preventDefault();\r\n\r\n    return (\r\n        <>\r\n            <Typography variant=\"h6\">\r\n                <Link href=\"https://github.com/maxfarseer/tz-webinars/tree/tz-2-react-redux-router-async\"\r\n                      onClick={preventDefault}>\r\n                    Второе тестовое задание\r\n                </Link> Максима Пацианского.Уровень работы с асинхронными запросами. Понимание взаимодействия клиента и\r\n                сервера.\r\n            </Typography>\r\n\r\n            <List>\r\n                {ListItemElements}\r\n            </List>\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default About;","import React from 'react';\r\nimport clsx from 'clsx';\r\nimport {makeStyles, Theme} from '@material-ui/core/styles';\r\nimport {Redirect, Route} from \"react-router-dom\";\r\nimport ProfileContainer from \"./Profile/ProfileContainer\";\r\nimport LoginContainer from \"./Login/LoginContainer\";\r\nimport NewsContainer from \"./News/NewsContainer\";\r\nimport About from \"./About/About\";\r\nimport {drawerWidth} from \"../../CONST/const\";\r\nimport {MainPropsType} from \"./MainContainer\";\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n}));\r\n\r\nconst Main: React.FC<MainPropsType> = (props) => {\r\n    const {isAuth, open} = props;\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <main className={clsx(classes.content, {\r\n            [classes.contentShift]: open,\r\n        })}>\r\n            <div className={classes.drawerHeader}/>\r\n            <Route path='/about' component={About}/>\r\n            <Route path='/news' component={NewsContainer}/>\r\n            <Route path='/profile'>\r\n                {isAuth ? <ProfileContainer/> : <Redirect to='/login'/>}\r\n            </Route>\r\n            <Route path='/login'>\r\n                {!isAuth ? <LoginContainer/> : <Redirect to='/profile'/>}\r\n            </Route>\r\n        </main>\r\n    )\r\n};\r\n\r\nexport default Main;\r\n\r\n//@types/react-router-dom\r\n\r\n\r\n\r\n\r\n\r\n","import {connect} from \"react-redux\";\r\nimport Main from \"./Main\";\r\nimport {StateType} from \"../../store/store\";\r\n\r\nconst mapStateToProps = (state: StateType): MapStatePropsType => ({\r\n    isAuth: state.auth.isAuth,\r\n    open: state.app.open\r\n});\r\n\r\nconst MainContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, StateType>\r\n(mapStateToProps, {})(Main);\r\n\r\nexport default MainContainer;\r\n\r\n//--------------------------TYPES---------------------------------------------\r\ntype MapStatePropsType = {\r\n    isAuth: boolean\r\n    open: boolean\r\n}\r\n\r\ntype MapDispatchPropsType = {\r\n\r\n}\r\n\r\nexport type MainPropsType = MapStatePropsType & MapDispatchPropsType;","import {Link as RouterLink} from \"react-router-dom\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon/ListItemIcon\";\r\nimport ListItemText from \"@material-ui/core/ListItemText/ListItemText\";\r\nimport React from \"react\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport {SidebarItemPropsType} from \"./SidebarItemContainer\";\r\n\r\nconst SidebarItem: React.FC<SidebarItemPropsType> = (props) => {\r\n    const {ownIndex, to, primary, icon, currentItem, setCurrentSidebarMenuItem,\r\n        } = props;\r\n\r\n    const onClick = () => {\r\n        setCurrentSidebarMenuItem(ownIndex);\r\n    };\r\n\r\n    return (\r\n        <li>\r\n        <ListItem\r\n            onClick={onClick}\r\n            selected={ownIndex === currentItem}\r\n            button\r\n            component={RouterLink}\r\n            to={to}>\r\n            {icon\r\n                ? <ListItemIcon color='primary'>\r\n                {icon}\r\n            </ListItemIcon>\r\n                : null}\r\n            <ListItemText primary={primary}/>\r\n        </ListItem>\r\n        </li>\r\n    )\r\n};\r\n\r\nexport default SidebarItem;","import {connect} from \"react-redux\";\r\nimport SidebarItem from \"./SidebarItem\";\r\nimport {sidebarAC} from \"../../../store/sidebar-reducer\";\r\nimport React from \"react\";\r\nimport {StateType} from \"../../../store/store\";\r\n\r\nconst mapStateToProps = (state: StateType) => ({\r\n    currentItem: state.sidebar.currentItem\r\n});\r\n\r\nconst setCurrentSidebarMenuItem = sidebarAC.setCurrentSidebarMenuItem;\r\n\r\nconst SidebarItemContainer = connect<MapStatePropsType, MapDispatchPropsType, OwnPropsType, StateType>\r\n(mapStateToProps, {setCurrentSidebarMenuItem})(SidebarItem);\r\n\r\nexport default SidebarItemContainer;\r\n\r\n//---------------------------------------------------------------------------\r\ntype MapStatePropsType = {\r\n    currentItem: number\r\n}\r\ntype MapDispatchPropsType = {\r\n    setCurrentSidebarMenuItem: (currentItem: number) => void\r\n}\r\ntype OwnPropsType = {\r\n    to: string\r\n    primary: string\r\n    icon?: React.ReactElement\r\n    ownIndex: number\r\n}\r\nexport type SidebarItemPropsType = MapStatePropsType & MapDispatchPropsType & OwnPropsType;\r\n\r\n","import React from 'react';\r\nimport {makeStyles, Theme, useTheme} from '@material-ui/core/styles';\r\nimport Drawer from '@material-ui/core/Drawer';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport {drawerWidth} from \"../../CONST/const\";\r\nimport SidebarItemContainer from \"./SidebarItem/SidebarItemContainer\";\r\nimport {SidebarPropsType} from \"./SidebarContainer\";\r\nimport AccountCircleIcon from '@material-ui/icons/AccountCircle';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport ImportContactsIcon from '@material-ui/icons/ImportContacts';\r\n\r\nconst useStyles = makeStyles((theme: Theme) => ({\r\n    root: {\r\n        display: 'flex',\r\n    },\r\n    appBar: {\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n    },\r\n    appBarShift: {\r\n        width: `calc(100% - ${drawerWidth}px)`,\r\n        marginLeft: drawerWidth,\r\n        transition: theme.transitions.create(['margin', 'width'], {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    hide: {\r\n        display: 'none',\r\n    },\r\n    drawer: {\r\n        width: drawerWidth,\r\n        flexShrink: 0,\r\n    },\r\n    drawerPaper: {\r\n        width: drawerWidth,\r\n    },\r\n    drawerHeader: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        padding: theme.spacing(0, 1),\r\n        // necessary for content to be below app bar\r\n        ...theme.mixins.toolbar,\r\n        justifyContent: 'flex-end',\r\n    },\r\n    content: {\r\n        flexGrow: 1,\r\n        padding: theme.spacing(3),\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        }),\r\n        marginLeft: -drawerWidth,\r\n    },\r\n    contentShift: {\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.enteringScreen,\r\n        }),\r\n        marginLeft: 0,\r\n    },\r\n    title: {\r\n        flexGrow: 1\r\n    }\r\n}));\r\n\r\nconst Sidebar: React.FC<SidebarPropsType> = (props) => {\r\n    const {setOpen, open} = props;\r\n    const classes = useStyles();\r\n    const theme = useTheme();\r\n    const handleDrawerClose = () => {\r\n        setOpen(false);\r\n    };\r\n    return (\r\n        <Drawer\r\n            className={classes.drawer}\r\n            variant=\"persistent\"\r\n            anchor=\"left\"\r\n            open={open}\r\n            classes={{\r\n                paper: classes.drawerPaper,\r\n            }}\r\n        >\r\n            <div className={classes.drawerHeader}>\r\n                <IconButton onClick={handleDrawerClose}>\r\n                    {theme.direction === 'ltr' ? <ChevronLeftIcon/> : <ChevronRightIcon/>}\r\n                </IconButton>\r\n            </div>\r\n            <Divider/>\r\n            <List>\r\n                <SidebarItemContainer ownIndex={1} to={\"/about\"} primary={'О проекте'} icon={<InfoIcon/>}/>\r\n                <SidebarItemContainer ownIndex={2} to={\"/profile\"} primary={'Профиль'} icon={<AccountCircleIcon/>}/>\r\n                <SidebarItemContainer ownIndex={3} to={\"/news\"} primary={'Новости'} icon={<ImportContactsIcon/>}/>\r\n            </List>\r\n        </Drawer>\r\n    )\r\n};\r\n\r\nexport default Sidebar;\r\n\r\n","import {connect} from \"react-redux\";\r\nimport {appAC} from \"../../store/app-reducer\";\r\nimport Sidebar from \"./Sidebar\";\r\nimport {StateType} from \"../../store/store\";\r\n\r\nconst mapStateToProps = (state: StateType): MapStatePropsType => ({\r\n    open: state.app.open\r\n});\r\n\r\nconst setOpen = appAC.setOpen;\r\n\r\nconst SidebarContainer = connect<MapStatePropsType, MapDispatchPropsType, {}, StateType>\r\n(mapStateToProps, {setOpen})(Sidebar);\r\n\r\nexport default SidebarContainer;\r\n\r\n//--------------------------------------------------------------------------------------\r\ntype MapStatePropsType = {\r\n    open: boolean\r\n}\r\ntype MapDispatchPropsType = {\r\n    setOpen: (open: boolean) => void\r\n}\r\nexport type SidebarPropsType =  MapStatePropsType & MapDispatchPropsType;","import React from 'react';\nimport HeaderContainer from \"./Components/Header/HeaderContainer\";\nimport MainContainer from \"./Components/Main/MainContainer\";\nimport {createStyles, makeStyles} from \"@material-ui/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport SidebarContainer from \"./Components/Sidebar/SidebarContainer\";\n\nconst useStyles = makeStyles(() =>\n    createStyles({\n        root: {\n            display: 'flex',\n        }\n    }),\n);\n\nconst App: React.FC = () => {\n    const classes = useStyles();\n    return (\n        <div className={classes.root}>\n            <CssBaseline />\n            <HeaderContainer/>\n            <SidebarContainer/>\n            <MainContainer/>\n        </div>\n    );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {Provider} from \"react-redux\";\nimport {HashRouter} from \"react-router-dom\";\nimport store from './store/store'\nimport App from \"./App\";\n\nReactDOM.render(\n    <HashRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </HashRouter>,\n    document.getElementById('root'));\n\n\n"],"sourceRoot":""}